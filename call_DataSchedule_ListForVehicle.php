<?php
include("Soap_header_token_DataSchedule.php");
include('call_core_orgid.php');
try {
$param_Schedule_Vehicle=array("VehicleID"=>921);
$response_Schedule_Vehicle =$DataScheduleWS ->__soapCall('GetDataScheduleListForVehicle',array($param_Schedule_Vehicle));

echo '<pre>';
//print_r($response_Schedule_Vehicle);

$result_Schedule_Vehicle=$response_Schedule_Vehicle->GetDataScheduleListForVehicleResult->DataScheduleEntity;

$result_Schedule_Vehicle_ID=$result_Schedule_Vehicle->ID;
$result_Schedule_Vehicle_Description=$result_Schedule_Vehicle->Description;
$result_Schedule_Vehicle_ScheduleObjectType=$result_Schedule_Vehicle->ScheduleObjectType;
$result_Schedule_Vehicle_SubjectID=$result_Schedule_Vehicle->SubjectID;
$result_Schedule_Vehicle_IsFullDownload=$result_Schedule_Vehicle->IsFullDownload;
$result_Schedule_Vehicle_ScheduleType=$result_Schedule_Vehicle->ScheduleType;
$result_Schedule_Vehicle_StartTime=$result_Schedule_Vehicle->StartTime;
$result_Schedule_Vehicle_DaysActive=$result_Schedule_Vehicle->DaysActive;
$result_Schedule_Vehicle_NextRunTime=$result_Schedule_Vehicle->NextRunTime;
$result_Schedule_Vehicle_MaxRetries=$result_Schedule_Vehicle->MaxRetries;
$result_Schedule_Vehicle_RetryDelayMinutes=$result_Schedule_Vehicle->RetryDelayMinutes;
$result_Schedule_Vehicle_DownloadStatus=$result_Schedule_Vehicle->DownloadStatus;
$result_Schedule_Vehicle_SynchroniseClock=$result_Schedule_Vehicle->SynchroniseClock;
$result_Schedule_Vehicle_DisarmUnit=$result_Schedule_Vehicle->DisarmUnit;
$result_Schedule_Vehicle_DriverIDToSet=$result_Schedule_Vehicle->DriverIDToSet;
$result_Schedule_Vehicle_SetOdometer=$result_Schedule_Vehicle->SetOdometer;
$result_Schedule_Vehicle_SetOdometerTo=$result_Schedule_Vehicle->SetOdometerTo;
$result_Schedule_Vehicle_SetEngineHours=$result_Schedule_Vehicle->SetEngineHours;
$result_Schedule_Vehicle_SetEngineHoursInSecondsTo=$result_Schedule_Vehicle->SetEngineHoursInSecondsTo;
$result_Schedule_Vehicle_PerformDataTransfer=$result_Schedule_Vehicle->PerformDataTransfer;
$result_Schedule_Vehicle_IntervalDataDownloadType=$result_Schedule_Vehicle->IntervalDataDownloadType;
$result_Schedule_Vehicle_IntervalDataStartTime=$result_Schedule_Vehicle->IntervalDataStartTime;
$date_start = new DateTime($result_Schedule_Vehicle_IntervalDataStartTime);
$result_Schedule_Vehicle_IntervalDataEndTime=$result_Schedule_Vehicle->IntervalDataEndTime;
$date_end = new DateTime($result_Schedule_Vehicle_IntervalDataEndTime);
$result_Schedule_Vehicle_UploadConfiguration=$result_Schedule_Vehicle->UploadConfiguration;
$result_Schedule_Vehicle_UploadDeviceDrivers=$result_Schedule_Vehicle->UploadDeviceDrivers;
$result_Schedule_Vehicle_TimeoutMinutes=$result_Schedule_Vehicle->TimeoutMinutes;
$result_Schedule_Vehicle_CallMeBackIfNoCoverage=$result_Schedule_Vehicle->CallMeBackIfNoCoverage;
$result_Schedule_Vehicle_CallMeBackForConfigUpload=$result_Schedule_Vehicle->CallMeBackForConfigUpload;
$result_Schedule_Vehicle_TransportID=$result_Schedule_Vehicle->TransportID;
$result_Schedule_Vehicle_IsCustomerInitiated=$result_Schedule_Vehicle->IsCustomerInitiated;
$result_Schedule_Vehicle_SystemScheduleType=$result_Schedule_Vehicle->SystemScheduleType;
$result_Schedule_Vehicle_Priority=$result_Schedule_Vehicle->Priority;
$result_Schedule_Vehicle_UploadTerminalScript=$result_Schedule_Vehicle->UploadTerminalScript;
$result_Schedule_Vehicle_UploadTerminalScriptForced=$result_Schedule_Vehicle->UploadTerminalScriptForced;
$result_Schedule_Vehicle_UploadTerminalDdm=$result_Schedule_Vehicle->UploadTerminalDdm;
$result_Schedule_Vehicle_UploadTerminalDdmForced=$result_Schedule_Vehicle->UploadTerminalDdmForced;
$result_Schedule_Vehicle_UploadTerminalDb=$result_Schedule_Vehicle->UploadTerminalDb;
$result_Schedule_Vehicle_UploadTerminalDbForced=$result_Schedule_Vehicle->UploadTerminalDbForced;
$result_Schedule_Vehicle_UploadCanDdm=$result_Schedule_Vehicle->UploadCanDdm;
$result_Schedule_Vehicle_UploadCanDdmForced=$result_Schedule_Vehicle->UploadCanDdmForced;
$result_Schedule_Vehicle_UploadExtendedConfig=$result_Schedule_Vehicle->UploadExtendedConfig;
$result_Schedule_Vehicle_UploadExtendedConfigForced=$result_Schedule_Vehicle->UploadExtendedConfigForced;
$result_Schedule_Vehicle_UploadExtendedConfigInTrip=$result_Schedule_Vehicle->UploadExtendedConfigInTrip;
$result_Schedule_Vehicle_IgnoreArmedCheckForDdxUpload=$result_Schedule_Vehicle->IgnoreArmedCheckForDdxUpload;
$result_Schedule_Vehicle_MessageToLog=$result_Schedule_Vehicle->MessageToLog;
} catch (SoapFault $fault) {
    trigger_error("SOAP Fault: (faultcode: {$fault->faultcode}, faultstring: {$fault->faultstring})", E_USER_ERROR);
}
print_r("ID.".$result_Schedule_Vehicle_ID);
print "\t";
print_r("Description.".$result_Schedule_Vehicle_Description);
print "\t";
print_r("ScheduleObjectType.".$result_Schedule_Vehicle_ScheduleObjectType);
print "\t";
print_r("SubjectID.".$result_Schedule_Vehicle_SubjectID);
print "\t";
print_r("IsFullDownload.".$result_Schedule_Vehicle_IsFullDownload);
print "\t";
print_r("ScheduleType.".$result_Schedule_Vehicle_ScheduleType);
print "\t";
print_r("StartTime.".$result_Schedule_Vehicle_StartTime);
print "\t";
print_r("DaysActive.".$result_Schedule_Vehicle_DaysActive);
print "\t";
print_r("NextRunTime.".$result_Schedule_Vehicle_NextRunTime);
print "\t";
print_r("MaxRetries.".$result_Schedule_Vehicle_MaxRetries);
print "\t";
print_r("MaxRetries.".$result_Schedule_Vehicle_RetryDelayMinutes);
print "\t";
print_r("DownloadStatus.".$result_Schedule_Vehicle_DownloadStatus);
print "\t";
print_r("SynchroniseClock.".$result_Schedule_Vehicle_SynchroniseClock);
print "\t";
print_r("DisarmUnit.".$result_Schedule_Vehicle_DisarmUnit);
print "\t";
print_r("DriverIDToSet.".$result_Schedule_Vehicle_DriverIDToSet);
print "\t";
print_r("SetOdometer.".$result_Schedule_Vehicle_SetOdometer);
print "\t";
print_r("SetOdometerTo.".$result_Schedule_Vehicle_SetOdometerTo);
print "\t";
print_r("SetEngineHours.".$result_Schedule_Vehicle_SetEngineHours);
print "\t";
print_r("SetEngineHoursInSecondsTo.".$result_Schedule_Vehicle_SetEngineHoursInSecondsTo);
print "\t";
print_r("PerformDataTransfer.".$result_Schedule_Vehicle_PerformDataTransfer);
print "\t";
print_r("IntervalDataDownloadType.".$result_Schedule_Vehicle_IntervalDataDownloadType);
print "\t";
print "IntervalDataStartTime.".$date_start->format('d/m/Y (H:i:s)');
print "\t";
print "IntervalDataEndTime.".$date_end->format('d/m/Y (H:i:s)');
print "\t";
print_r("UploadConfiguration.".$result_Schedule_Vehicle_UploadConfiguration);
print "\t";
print_r("UploadDeviceDrivers.".$result_Schedule_Vehicle_UploadDeviceDrivers);
print "\t";
print_r("TimeoutMinutes.".$result_Schedule_Vehicle_TimeoutMinutes);
print "\t";
print_r("CallMeBackIfNoCoverage.".$result_Schedule_Vehicle_CallMeBackIfNoCoverage);
print "\t";
print_r("CallMeBackForConfigUpload.".$result_Schedule_Vehicle_CallMeBackIfNoCoverage);
print "\t";
print_r("TransportID.".$result_Schedule_Vehicle_TransportID);
print "\t";
print_r("IsCustomerInitiated.".$result_Schedule_Vehicle_IsCustomerInitiated);
print "\t";
print_r("SystemScheduleType.".$result_Schedule_Vehicle_SystemScheduleType);
print "\t";
print_r("Priority.".$result_Schedule_Vehicle_Priority);
print "\t";
print_r("UploadTerminalScript.".$result_Schedule_Vehicle_UploadTerminalScript);
print "\t";
print_r("UploadTerminalScriptForced.".$result_Schedule_Vehicle_UploadTerminalScriptForced);
print "\t";
print_r("UploadTerminalDdm.".$result_Schedule_Vehicle_UploadTerminalDdm);
print "\t";
print_r("UploadTerminalDdmForced.".$result_Schedule_Vehicle_UploadTerminalDdmForced);
print "\t";
print_r("UploadTerminalDb.".$result_Schedule_Vehicle_UploadTerminalDb);
print "\t";
print_r("UploadTerminalDbForced.".$result_Schedule_Vehicle_UploadTerminalDbForced);
print "\t";
print_r("UploadCanDdm.".$result_Schedule_Vehicle_UploadCanDdm);
print "\t";
print_r("UploadCanDdmForced.".$result_Schedule_Vehicle_UploadCanDdmForced);
print "\t";
print_r("UploadExtendedConfig.".$result_Schedule_Vehicle_UploadExtendedConfig);
print "\t";
print_r("UploadExtendedConfigForced.".$result_Schedule_Vehicle_UploadExtendedConfigForced);
print "\t";
print_r("UploadExtendedConfigInTrip.".$result_Schedule_Vehicle_UploadExtendedConfigInTrip);
print "\t";
print_r("IgnoreArmedCheckForDdxUpload.".$result_Schedule_Vehicle_IgnoreArmedCheckForDdxUpload);
print "\t";
print_r("MessageToLog.".$result_Schedule_Vehicle_MessageToLog);
print "\t";
?>